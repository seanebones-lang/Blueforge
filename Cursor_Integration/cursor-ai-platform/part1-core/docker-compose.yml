version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cursor-postgres
    environment:
      POSTGRES_DB: cursor_ai_platform
      POSTGRES_USER: deepblue
      POSTGRES_PASSWORD: deepblue_power_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cursor-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cursor-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cursor-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cursor-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://deepblue:deepblue_power_2024@postgres:5432/cursor_ai_platform
      REDIS_URL: redis://redis:6379
      JWT_SECRET: deepblue_jwt_secret_2024
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - cursor-network
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cursor-frontend
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_WS_URL: ws://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - cursor-network
    command: npm run dev

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: cursor-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - cursor-network

volumes:
  postgres_data:
  redis_data:

networks:
  cursor-network:
    driver: bridge
