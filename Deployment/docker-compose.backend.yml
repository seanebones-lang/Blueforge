# DeepBlue Backend Infrastructure Docker Compose
version: '3.8'

services:
  # Main Backend API
  deepblue-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: deepblue-backend
    ports:
      - "8000:8000"
    environment:
      - JWT_SECRET=your-super-secret-jwt-key-here
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=sqlite:///app/deepblue_backend.db
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./backups:/app/backups
      - ./deepblue_backend.db:/app/deepblue_backend.db
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - deepblue-network

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: deepblue-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - deepblue-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: deepblue-postgres
    environment:
      - POSTGRES_DB=deepblue
      - POSTGRES_USER=deepblue
      - POSTGRES_PASSWORD=deepblue_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - deepblue-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: deepblue-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - deepblue-backend
    restart: unless-stopped
    networks:
      - deepblue-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: deepblue-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - deepblue-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: deepblue-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - deepblue-network

  # Elasticsearch for Logging
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: deepblue-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: unless-stopped
    networks:
      - deepblue-network

  # Kibana for Log Analysis
  kibana:
    image: kibana:8.11.0
    container_name: deepblue-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      - deepblue-network

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:

networks:
  deepblue-network:
    driver: bridge
